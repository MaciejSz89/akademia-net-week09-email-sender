@using EmailSenderAspNetMvc.Models.Domains
@using EmailSenderAspNetMvc.Models.ViewModels

@model AddEmailMessageReceiverViewModel

@if (Model.ReceiverType == @EmailMessageReceiverType.To)
{
    <div class="row email-receiver-to">
        @Html.Hidden("EmailFolderMessageReceiversTo[" + Model.ItemIndex.ToString() + "].Id",
                     "",
                     new { @class = "email-receiver-id" })
        @Html.Hidden("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailMessageId",
                     Model.MessageId.ToString(),
                     new { @class = "email-receiver-message-id" })
        @Html.Hidden("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailAddressId",
                     Model.EmailAddress.Id.ToString(),
                     new { @class = "email-receiver-address-id" })
        @Html.Hidden("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailMessageReceiverType",
                     Model.ReceiverType.ToString(),
                     new { @class = "email-receiver-type" })
        @Html.Hidden("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailAddress.IsDefined",
                     Model.EmailAddress.IsDefined.ToString(),
                     new { @class = "email-receiver-type" })
        <div class="col-4">
            @Html.TextBox("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailAddress.DisplayName",
                          Model.EmailAddress.DisplayName.ToString(),
                          Model.EmailAddress.IsDefined ?
                          new
                          {
                              @class = "form-control email-receiver-display-name mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Nazwa odbiorcy",
                              @readonly = Model.EmailAddress.IsDefined
                          } :
                          new
                          {
                              @class = "form-control email-receiver-display-name mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Nazwa odbiorcy"
                          })
            @Html.ValidationMessage("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailAddress.DisplayName",
                                        (string)ViewBag.DisplayNameValidationMessage,
                                        new { @class = "text-danger" })
        </div>
        <div class="col-6">
            @Html.TextBox("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailAddress.Address",
                          Model.EmailAddress.Address.ToString(),
                          Model.EmailAddress.IsDefined ?
                          new
                          {
                              @class = "form-control email-receiver-address mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Email odbiorcy",
                              @readonly = Model.EmailAddress.IsDefined
                          } :
                          new
                          {
                              @class = "form-control email-receiver-address mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Email odbiorcy"
                          })
            @Html.ValidationMessage("EmailMessageReceiversTo[" + Model.ItemIndex.ToString() + "].EmailAddress.Address",
                                        (string)ViewBag.AddressValidationMessage,
                                        new { @class = "text-danger" })
        </div>
        <div class="col-2">
            <button type="button"
                    class="btn btn-danger"
                    onclick='deleteEmailReceiver($(this).parents(".email-receiver-to"))'>
                Usuń
            </button>
        </div>

    </div>
}
@if (Model.ReceiverType == @EmailMessageReceiverType.CC)
{
    <div class="row email-receiver-cc">
        @Html.Hidden("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].Id",
                     "",
                     new { @class = "email-receiver-id" })
        @Html.Hidden("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailMessageId",
                     Model.MessageId.ToString(),
                     new { @class = "email-receiver-message-id" })
        @Html.Hidden("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailAddressId",
                     Model.EmailAddress.Id.ToString(),
                     new { @class = "email-receiver-address-id" })
        @Html.Hidden("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailMessageReceiverType",
                     Model.ReceiverType.ToString(),
                     new { @class = "email-receiver-type" })
        @Html.Hidden("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailAddress.IsDefined",
                     Model.EmailAddress.IsDefined.ToString(),
                     new { @class = "email-receiver-type" })
        <div class="col-4">
            @Html.TextBox("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailAddress.DisplayName",
                          Model.EmailAddress.DisplayName.ToString(),
                          Model.EmailAddress.IsDefined ?
                          new
                          {
                              @class = "form-control email-receiver-display-name mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Nazwa odbiorcy",
                              @readonly = Model.EmailAddress.IsDefined
                          } :
                          new
                          {
                              @class = "form-control email-receiver-display-name mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Nazwa odbiorcy"
                          })
            @Html.ValidationMessage("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailAddress.DisplayName",
                                        (string)ViewBag.DisplayNameValidationMessage,
                                        new { @class = "text-danger" })
        </div>
        <div class="col-6">
            @Html.TextBox("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailAddress.Address",
                          Model.EmailAddress.Address.ToString(),
                          Model.EmailAddress.IsDefined ?
                          new
                          {
                              @class = "form-control email-receiver-address mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Email odbiorcy",
                              @readonly = Model.EmailAddress.IsDefined
                          } :
                          new
                          {
                              @class = "form-control email-receiver-address mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Email odbiorcy"
                          })
            @Html.ValidationMessage("EmailMessageReceiversCc[" + Model.ItemIndex.ToString() + "].EmailAddress.Address",
                                        (string)ViewBag.AddressValidationMessage,
                                        new { @class = "text-danger" })
        </div>
        <div class="col-2">
            <button type="button"
                    class="btn btn-danger"
                    onclick='deleteEmailReceiver($(this).parents(".email-receiver-cc"))'>
                Usuń
            </button>
        </div>

    </div>
}

@if (Model.ReceiverType == @EmailMessageReceiverType.BCC)
{
    <div class="row email-receiver-bcc">
        @Html.Hidden("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].Id",
                     "",
                     new { @class = "email-receiver-id" })
        @Html.Hidden("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailMessageId",
                     Model.MessageId.ToString(),
                     new { @class = "email-receiver-message-id" })
        @Html.Hidden("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailAddressId",
                     Model.EmailAddress.Id.ToString(),
                     new { @class = "email-receiver-address-id" })
        @Html.Hidden("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailMessageReceiverType",
                     Model.ReceiverType.ToString(),
                     new { @class = "email-receiver-type" })
        @Html.Hidden("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailAddress.IsDefined",
                     Model.EmailAddress.IsDefined.ToString(),
                     new { @class = "email-receiver-type" })
        <div class="col-4">
            @Html.TextBox("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailAddress.DisplayName",
                          Model.EmailAddress.DisplayName.ToString(),
                          Model.EmailAddress.IsDefined ?
                          new
                          {
                              @class = "form-control email-receiver-display-name mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Nazwa odbiorcy",
                              @readonly = Model.EmailAddress.IsDefined
                          } :
                          new
                          {
                              @class = "form-control email-receiver-display-name mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Nazwa odbiorcy"
                          })
            @Html.ValidationMessage("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailAddress.DisplayName",
                                     null,
                                     new { @class = "text-danger" })
        </div>
        <div class="col-6">
            @Html.TextBox("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailAddress.Address",
                          Model.EmailAddress.Address.ToString(),
                          Model.EmailAddress.IsDefined ?
                          new
                          {
                              @class = "form-control email-receiver-address mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Email odbiorcy",
                              @readonly = Model.EmailAddress.IsDefined
                          } :
                          new
                          {
                              @class = "form-control email-receiver-address mb-2",
                              onfocusout = "updateValue($(this), this.value)",
                              placeholder = "Email odbiorcy"
                          })
            @Html.ValidationMessage("EmailMessageReceiversBcc[" + Model.ItemIndex.ToString() + "].EmailAddress.Address",
                                        null,
                                        new { @class = "text-danger" })
        </div>
        <div class="col-2">
            <button type="button"
                    class="btn btn-danger"
                    onclick='deleteEmailReceiver($(this).parents(".email-receiver-bcc"))'>
                Usuń
            </button>
        </div>

    </div>
}


